//1 : Sélectionner toutes les colonnes de la table SERV. 
select * from serv;

//3 : Sélectionner les colonnes SERVICE et NOSERV de la table SERV.
select service, noserv from serv;

//5 : Sélectionner les emplois de la table EMP.
select emploi from emp;

//7 : Sélectionner les employés du service N°3.
SELECT * FROM emp WHERE noserv = '3';

//9 : Sélectionner les noms, numéros de service de tous les services dont le numéro est supérieur à 2.
select nom, noserv from emp where noserv >2;

select service from serv where noserv >2;

//11 : Sélectionner les employés dont la commission est inférieure au salaire. Vérifiez le résultat jusqu’à //obtenir la bonne réponse.
SELECT nom, prenom, sal, comm FROM emp WHERE  sal > comm;

//13 : Sélectionner les employés qui touchent éventuellement une
//commission et dans l’ordre croissant des commissions.
select * from emp where comm is not null order by comm;

//15 : Sélectionner les employés qui n’ont pas de chef.
select * from emp where sup is null;

// 17 : Sélectionner les vendeurs du service 6 qui ont un revenu mensuel
//supérieur ou égal à 9500 €
select from emp where emploi = 'vendeur' and noserv = 6 and sal + comm >= 9500;

// 19 : Sélectionner les directeurs qui ne sont pas dans le service 3.
select from emp where emploi = 'directeur' and noserv != 3;

//21 : Sélectionner les « directeurs et les techniciens » du service 1.
select * from emp where (noserv=1 and emploi= 'directeur')or(noserv=1 and emploi='technicien');

//23 : Sélectionner les employés qui ne sont ni directeur, ni technicien et
//travaillant dans le service 1.
select * from emp where(noserv=1 and emploi !='directeur' and emploi!= 'technicien');

// 25 : Sélectionner les employés qui ne sont ni technicien, ni comptable, ni vendeur.
select * from emp where emploi !='TECHNICIEN' and emploi !='COMPTABLE' and emploi !='VENDEUR'; 

//27 : Sélectionner les subalternes qui ne sont pas dans les services 1, 3, 5.
select * from emp where sup is not null AND noserv NOT IN (1, 3, 5);

//29 : Sélectionner les employés qui gagnent moins de 20000 et plus de 40000 euros.
select * from emp where sal <20000 or sal>40000;
select * FROM emp where sal not between 20000 AND 40000;

// 31 : Sélectionner les directeurs des services 2 ,3 , 4, 5 sans le IN.
select from emp where emploi = 'DIRECTEUR' and (noserv = 2 or noserv = 3 or noserv = 4 or noserv = 5);
select * from emp where emploi = 'DIRECTEUR' and noserv between 2 and 5; 

//33 : Sélectionner les employés dont le nom se termine par T.
select * from emp where nom like '%T'; 

//35 : Sélectionner les employés ayant exactement un E dans leur nom.
select * from emp where nom like '%E%' and not nom like '%E%E%'; 

//37 : Sélectionner les employés dont le nom s'écrit avec 6 caractères et qui se termine par N.
select * from emp where nom like '_____N'; 

// 39 : Sélectionner les employés dont le nom ne s'écrit pas avec 5 caractères.*/
SELECT * FROM emp WHERE LENGTH(nom) !=5; 


//41 : Trier les employés (nom, prénom, n° de service , salaire) du service 3
//par ordre de salaire décroissant.
select nom, prenom, noserv, sal from emp where noserv = '3' ORDER BY sal desc; 

//43 : Trier les employés (nom, prénom, n° de service, salaire, emploi) par
//emploi, et pour chaque emploi par ordre décroissant de salaire.
select nom, prenom, noserv, sal, emploi from emp order by emploi,sal desc;

//45 : Trier les employés (nom, prénom, n° de service, commission) du service
//3 par ordre croissant de commission.

select nom, prenom, noserv, comm from emp where noserv ='3' order by comm ASC;

/*47 : Sélectionner le nom, le prénom, l'emploi, le nom du service de l'employé
pour tous les employés.*/
select distinct nom, prenom, emploi, service from emp, serv where emp.noserv = serv.noserv ;

//48 : Sélectionner le nom, l'emploi, le numéro de service, le nom du service
pour tous les employés.//

select distinct nom, emploi, emp.noserv, service from emp,serv where emp.noserv = serv.noserv;
SELECT e.nom,e.emploi,s.noserv,s.service FROM emp e , serv s  WHERE e.noserv = s.noserv;

//49 : Idem en utilisant des alias pour les noms de tables.

SELECT distinct e.nom as NOMM, e.emploi as EMPLOII, s.noserv as NUMSERVICE, s.service as SERVICEE FROM emp e  , serv s  WHERE e.noserv = s.noserv ;

//50 : Sélectionner le nom, l'emploi, suivis de toutes les colonnes de la table service
select distinct e.nom, e.emploi, s.* from emp e, serv s where e.noserv = s.noserv; 

//51 : Sélectionner les nom et date d'embauche des employés suivi des nom et
//date d'embauche de leur supérieur pour les employés plus ancien que leur
//supérieur, dans l'ordre nom employés, noms supérieurs.

SELECT distinct e.noemp, e.nom, e.prenom, e.emploi, e.embauche, s.noemp, s.nom, s.prenom, s.emploi, s.embauche FROM emp e, emp s where s.noemp = e.sup and e.embauche<s.embauche order by e.nom, s.nom;

//52 : Sélectionner sans doublon les prénoms des directeurs et « les prénoms des
techniciens du service 1 » avec un UNION.
select prenom, emploi from emp where emploi = 'DIRECTEUR' union select prenom, emploi from emp where emploi = 'TECHNICIEN' and noserv =1; 
select e.prenom, e.emploi from emp e where e.emploi = 'DIRECTEUR' union select prenom, emploi from emp where emploi = 'TECHNICIEN' and noserv =1;

//53 : Sélectionner les numéros de services n’ayant pas d’employés sans une
//jointure externe.
select noserv from serv where noserv not in (select distinct noserv from emp); 

//54 : Sélectionner les services ayant au moins un employé.
Select DISTINCT service from serv inner join emp on serv.noserv = emp.noserv;

//55 : Sélectionner les employés qui travaillent à LILLE.
select distinct * from emp, serv where ville = 'LILLE' and emp.noserv= serv.noserv; 

//56 : Sélectionner les employés qui ont le même chef que DUBOIS, DUBOIS exclu.
select * from emp where sup = (select sup from emp where nom = 'DUBOIS') and nom !='DUBOIS';
 
//57 : Sélectionner les employés embauchés le même jour que DUMONT.*/
select  * from emp where embauche = (select embauche from emp where nom = 'DUMONT');

//58 : Sélectionner les nom et date d'embauche des employés plus anciens que MINET,
dans l’ordre des embauches.
select nom, embauche from emp where embauche < (select embauche from emp where nom= 'MINET') order by embauche;

//59 : Sélectionner le nom, le prénom, la date d’embauche des employés plus anciens
que tous les employés du service N°6. (Attention MIN)
select nom, prenom, embauche from emp where embauche < (select min(embauche) from emp where noserv = '6'); 

//60 : Sélectionner le nom, le prénom, le revenu mensuel des employés qui gagnent
plus qu'au moins un employé du service N°3, trier le résultat dans l'ordre croissant
des revenus mensuels.
select nom, prenom, sal from emp where sal > ( select min(sal) from emp where noserv= '3') order by 3 asc ;

//61 : Sélectionner les noms, le numéro de service, l’emplois et le salaires des
personnes travaillant dans la même ville que HAVET.

SELECT emp.nom, emp.noserv, emp.emploi, emp.sal, serv.ville FROM emp INNER JOIN serv ON emp.noserv = serv.noserv where ville = (select ville from emp, serv where nom ='HAVET' and emp.noserv = serv.noserv);

//62 : Sélectionner les employés du service 1, ayant le même emploi qu'un employé du service N°3.
select * from emp where noserv = '1' and emploi in (select emploi from emp where noserv = '3'); 

//63 : Sélectionner les employés du service 1 dont l'emploi n'existe pas dans le service 3.
select * from emp where  noserv = '1' and emploi not in (select emploi from emp where noserv = '3');

//64 : Sélectionner nom, prénom, emploi, salaire pour les employés ayant même emploi et un salaire supérieur à //celui de CARON.

select nom, prenom, emploi, sal from emp where emploi in (select emploi from emp where nom='CARON') and sal > (select sal from emp where nom='CARON');

//65 : Sélectionner les employés du service N°1 ayant le même emploi qu'un employé du
//service des VENTES.

select * from emp,serv where emp.noserv =1 and serv.service in (select service from serv where service= 'VENTES');

//66 : Sélectionner les employés de LILLE ayant le même emploi que RICHARD, trier le
//résultat dans l'ordre alphabétique des noms. 
SELECT emp.nom, emp.prenom, emp.emploi,serv.ville FROM emp INNER join serv on emp.noserv = serv.noserv WHERE ville = 'LILLE' AND emp.emploi = (SELECT emploi FROM emp WHERE nom = 'RICHARD') ORDER BY emp.nom ASC; 

//67 : Sélectionner les employés dont le salaire est plus élevé que le salaire moyen de leur
//service (moyenne des salaires = avg(sal)), résultats triés par numéros de service
SELECT * FROM emp WHERE sal > (SELECT AVG(sal)FROM emp WHERE noserv = emp.noserv)ORDER BY noserv ASC; 

SELECT * FROM emp JOIN (SELECT noserv, AVG(sal) AS salaire_moyen FROM emp GROUP BY noserv) AS moyennes ON emp.noserv = moyennes.noserv WHERE emp.sal > moyennes.salaire_moyen ORDER BY emp.noserv ASC; 

//68 : Sélectionner les employés du service INFORMATIQUE embauchés la même année
//qu'un employé du service VENTES.
//( année -> oracle : to_char(embauche,’YYYY’)> MYSQL: DATE_FORMAT(embauche,’%Y’)
SELECT emp.nom, YEAR(emp.embauche) FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE serv.service IN ('INFORMATIQUE', 'VENTES') GROUP BY emp.nom HAVING COUNT(DISTINCT YEAR(emp.embauche)) = 1;  

SELECT emp.nom, YEAR(emp.embauche) FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE serv.service IN ('INFORMATIQUE') and year(emp.embauche) in (select year(emp2.embauche) from emp as emp2 inner join serv as serv2 on emp2.noserv = serv2.noserv where service in ('VENTES'));

//69 : Sélectionner le nom, l’emploi, la ville pour les employés qui ne travaillent pas dans le
//même service que leur supérieur hiérarchique direct.
SELECT emp.nom, emp.emploi, serv.ville FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE emp.noserv <> ( SELECT sup.noserv FROM emp sup WHERE emp.sup = sup.noemp ); 

//70 : Sélectionner le nom, le prénom, le service, le revenu des employés qui ont des
subalternes, trier le résultat suivant le revenu décroissant.

SELECT emp.nom, emp.prenom, serv.service, emp.sal FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE emp.noemp IN ( SELECT sup FROM emp WHERE sup IS NOT NULL ) ORDER BY emp.sal DESC; 

//71 :Sélectionner le nom, l’emploi, le revenu mensuel (nommé Revenu) avec deux décimales
pour tous les employés, dans l’ordre des revenus décroissants
SELECT emp.nom, emp.emploi, ROUND(Sal, 2) AS Revenu FROM emp ORDER BY Revenu DESC; 

//72 : Sélectionner le nom, le salaire, commission des employés dont la commission représente
plus que le double du salaire

SELECT emp.nom, emp.Sal, emp.Comm FROM emp WHERE Comm > Sal * 2; 

//73 : Sélectionner nom, prénom, emploi, le pourcentage de commission (deux décimales) par
rapport au revenu mensuel ( renommé "% Commissions") , pour tous les vendeurs dans l'ordre
décroissant de ce pourcentage.
SELECT emp.nom, emp.prenom, emp.emploi, ROUND(Comm / sal * 100, 2) AS "% Comm" FROM emp WHERE emploi = 'VENDEUR' ORDER BY "% Comm" DESC; 

select nom, prenom, emploi, round(IFNULL(comm,0)/(sal+IFNULL(comm,0))*100,2) as "%commissions" from emp where emploi='VENDEUR' order by "%commissions" desc; 

//74 : Sélectionner le nom, l’emploi, le service et le revenu annuel ( à l’euro près) de tous les
vendeurs
SELECT emp.nom, emp.prenom, serv.service, emp.emploi, ROUND(SUM(sal * 12)) AS "Revenu Annuel" FROM emp inner join serv on emp.noserv = serv.noserv WHERE emp.emploi = 'VENDEUR' GROUP BY emp.Nom, emp.Emploi, serv.Service; 

//76 : Idem pour les employés des services 3,5,6 en remplaçant les noms des colonnes : SAL par
SALAIRE, COMM par COMMISSIONS, SAL+IFNULL(COMM,0) par GAIN_MENSUEL.
SELECT nom, emploi, serv.service, sal AS SALAIRE, comm AS COMMISSIONS, sal + IFNULL(comm, 0) AS GAIN_MENSUEL FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE serv.service IN ('3', '5', '6'); 

//78 : Afficher le nom, l'emploi, les salaires journalier et horaire pour les employés des services
3,5,6 (22 jours/mois et 8 heures/jour), sans arrondi, arrondi au centime près.

//80 : Concaténer les colonnes Service et Ville en les reliant par " ----> ", les premières lettres des noms de villes
doivent se trouver sur une même verticale.

SELECT service, ville, CONCAT(RPAD(service, (SELECT MAX(LENGTH(service)) FROM serv), '-'), ' ---> ', ville) AS 'service-->ville'
FROM serv;

//82 : Sélectionner les employés en remplaçant les noms par '*****' dans le service n°1, trier le résultat suivant le N° de service

SELECT noemp, REPLACE(nom, nom, '*****') AS nom, emploi, sal, comm, noserv FROM emp WHERE noserv = 1; 

//84 : Sélectionner les employés embauchés en 1988.

select emp.nom, emp.prenom from emp where DATE_FORMAT(SYSDATE(),'2018'); 

//86 : Sélectionner les positions des premiers M et E dans les noms des employés

SELECT nom, INSTR(nom, 'M') AS position_M, INSTR(nom, 'E') AS position_E FROM emp; 

//88 : Tracer un Histogramme des salaires avec nom, emploi, salaire triés dans l'ordre décroissant (max de
l’histogramme avec 30 caractères).
SELECT nom, emploi, sal, RPAD('', FLOOR(sal / (SELECT MAX(sal) FROM emp) * 30), '|') AS histogramme FROM emp ORDER BY sal DESC; 

//90 : Même chose en écrivant la colonne embauche sous la forme ‘dd-mm-yy’, renommée embauche.

SELECT nom, emploi, DATE_FORMAT(embauche, '%d-%m-%y') AS embauche FROM emp WHERE noserv = 6; 

//92 : Même chose en écrivant la colonne embauche sous la forme ‘day dd month(abv) yy'
SELECT nom, emploi, DATE_FORMAT(embauche, '%W %d %b %y') AS embauche FROM emp WHERE noserv = 6; 

//94 : Même chose en écrivant la colonne embauche sous la forme ‘Day-dd-Month-yyyy'
SELECT nom, emploi, DATE_FORMAT(embauche, '%W %d %b %Y') AS embauche FROM emp WHERE noserv = 6; 

//96 : Sélectionner les employés avec leur ancienneté en mois dans l'entreprise.
SELECT nom, emploi, DATEDIFF(CURDATE(), embauche) / 30 AS anciennete_en_mois FROM emp; 

//98 : Sélectionner les employés ayant plus de 12 ans d’ancienneté.
SELECT nom, DATE_FORMAT(SYSDATE(),'%y') AS embauche FROM emp where embauche > 12; 

//100 : Depuis combien de mois êtes-vous nés ?
SELECT nom , DATEDIFF(CURDATE(), '1989-07-22') / 30 AS mois_depuis_naissance from emp; 

//101 : Afficher la moyenne des revenus (avec commission) des vendeurs.
SELECT AVG(sal + IFNULL(comm, 0)) AS moyenne_revenus_vendeurs FROM emp WHERE emploi = 'VENDEUR'; 

//102 : Paramétrer la requête qui précède sur l’emploi.
SELECT YEAR(embauche) AS annee, COUNT(*) AS nombre_employes FROM emp WHERE emploi = 'VENDEUR' GROUP BY YEAR(embauche); 

//103 : Afficher la somme des salaires et la somme des commissions des vendeurs.
SELECT SUM(sal) AS somme_salaires, SUM(comm) AS somme_commissions FROM emp WHERE emploi = 'VENDEUR'; 

104 : Afficher le plus haut salaire, le plus bas salaire, la différence entre les deux.
SELECT MAX(sal) AS plus_haut_salaire, MIN(sal) AS plus_bas_salaire, MAX(sal) - MIN(sal) AS difference_salaire FROM emp; 

//105 : Compter les employés embauchés chaque année.
SELECT YEAR(embauche) AS annee, COUNT(*) AS nombre_employes FROM emp GROUP BY YEAR(embauche); 

//106 : Afficher le nombre de lettres du service dont le nom est le plus court.
SELECT LENGTH(service) AS nombre_lettres FROM serv ORDER BY LENGTH(service); 


 //108 : Déterminer le nombre d'employés du service 3 qui reçoivent éventuellement une
commission.
SELECT COUNT(*) AS nombre_employes FROM emp WHERE noserv = 3 AND comm IS NOT NULL; 


 //110 : Déterminer le nombre d'employés du service N°3.
SELECT COUNT(*) AS nombre_employes FROM emp WHERE noserv = 3; 

//112 : Pour chaque service donner le salaire annuel moyen de tous les employés qui ne sont ni président, ni directeur.
SELECT serv.service, AVG(sal * 12) AS salaire_annuel_moyen FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE emp.emploi NOT IN ('PRESIDENT', 'DIRECTEUR') GROUP BY serv.service; 

//114 : Idem en remplaçant le numéro de service par le nom du service.
select noserv,replace(service,service,'numéro_de_service') as service,ville from serv; 

//116 : Sélectionner les services ayant au mois deux vendeurs.
SELECT serv.service, COUNT(*) AS nombre_vendeurs FROM emp INNER JOIN serv ON emp.noserv = serv.noserv WHERE emp.emploi = 'VENDEUR' GROUP BY serv.service HAVING COUNT(*) >= 2; 

//118 : Sélectionner les emplois ayant un salaire moyen supérieur au salaire moyen des directeurs.
SELECT emp.emploi,AVG(sal) as salaire_moyen FROM emp WHERE emploi != 'DIRECTEUR' GROUP BY emp.emploi HAVING AVG(sal) > (select AVG(sal)FROM emp WHERE emp.emploi = 'DIRECTEUR');
 
//120 : Afficher l'effectif, la moyenne et le total pour les salaires et les commissions par emploi.
SELECT emploi, COUNT(*) AS effectif, AVG(sal) AS salaire_moyen, SUM(sal) AS salaire_total, AVG(comm) AS commission_moyenne, SUM(comm) AS commission_total FROM emp GROUP BY emploi; 


 