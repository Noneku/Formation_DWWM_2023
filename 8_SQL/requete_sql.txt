/*1:Sélectionner toutes les colonnes de la table SERV.*/
SELECT * FROM SERV;

/*3:Sélectionner les colonnes SERVICE et NOSERV de la table SERV.*/
SELECT noserv, service FROM serv;

/*5:Sélectionner les emplois de la table EMP.*/
select emploi from emp;

/*7 : Sélectionner les employés du service N°3.*/
select * from emp where noserv=3;

/9 : Sélectionner les noms, numéros de service de tous les services
dont le numéro est supérieur à 2.*/
select service, noserv from serv where noserv>2;

/*11 : Sélectionner les employés dont la commission est inférieure
au salaire. Vérifiez le résultat jusqu’à obtenir la bonne réponse.*/
select * from emp where coalesce(comm,0)<sal;

/*13 : Sélectionner les employés qui touchent éventuellement une
commission et dans l’ordre croissant des commissions.*/
SELECT * from emp where comm NOTNULL order by comm asc;

/*15 : Sélectionner les employés qui n’ont pas de chef.*/
select * from emp where sup isnull;

/* 17 : Sélectionner les vendeurs du service 6 qui ont un revenu mensuel
supérieur ou égal à 9500 €.*/
select * from emp where noserv = 6 AND sal+comm >= 9500;

/* 19 : Sélectionner les directeurs qui ne sont pas dans le service 3.*/
select * from emp where noserv !=3;

/*21 : Sélectionner les « directeurs et les techniciens » du service 1.*/
SELECT * from emp where (emploi ='DIRECTEUR' or emploi='TECHNICIEN') AND noserv = 1;

/*23 : Sélectionner les employés qui ne sont ni directeur, ni technicien et travaillant dans le service 1.*/
select * from emp where emploi NOT IN ('TECHNICIEN','TECHNICIEN') and noserv=1;

/*25 : Sélectionner les employés qui ne sont ni technicien, ni comptable, ni vendeur*/
select * from emp where emploi not in('TECHNICIEN','COMPTABLE','VENDEUR');

/*27 : Sélectionner les subalternes qui ne sont pas dans les services 1, 3, 5.*/
select * from emp where (sup NOTNULL) AND (noserv NOT in(1,3,5));

/*29 : Sélectionner les employés qui gagnent moins de 20000 et plus de 40000 euros.*/
select * from emp where sal<20000 OR sal>40000 ;

/*31 : Sélectionner les directeurs des services 2 ,3 , 4, 5 sans le IN.*/
select * from emp where (emploi='DIRECTEUR') AND (noserv =2 or noserv =3 or noserv =4 or noserv =5);

/*33 : Sélectionner les employés dont le nom se termine par T*/
select * from emp where nom like '%T';

/*35 : Sélectionner les employés ayant exactement un E dans leur nom.*/
select * from emp where nom like '%E%' AND nom not like'%E%E%';

/*37 : Sélectionner les employés dont le nom s'écrit avec 6 caractères et qui se termine parN.*/
select * from emp where nom like '_____N';

/* 39 : Sélectionner les employés dont le nom ne s'écrit pas avec 5 caractères.*/
select * from emp where length(nom) != 5;

/*41 : Trier les employés (nom, prénom, n° de service , salaire) du service 3
par ordre de salaire décroissant.*/
select nom, prenom, noserv, sal from emp where noserv =3 order by sal desc;

/*43 : Trier les employés (nom, prénom, n° de service, salaire, emploi) par emploi, et pour chaque emploi par ordre
décroissant de salaire.*/
select nom,prenom,noserv,sal,emploi from emp ORDER BY emploi, sal DESC;

/*45 : Trier les employés (nom, prénom, n° de service, commission) du service 3 par ordre croissant de commission*/
select nom,prenom,noserv,comm from emp where noserv=3 ORDER BY comm;

/*47 : Sélectionner le nom, le prénom, l'emploi, le nom du service de l'employé pour tous les employés.*/
SELECT e.nom,e.prenom, e.emploi, s.service FROM emp e, serv s WHERE e.noserv=s.noserv;

/*48 : Sélectionner le nom, l'emploi, le numéro de service, le nom du service
pour tous les employés.*/
SELECT e.nom,e.emploi,s.noserv,s.service FROM emp e , serv s  WHERE e.noserv = s.noserv;

/*49 : Idem en utilisant des alias pour les noms de tables.*/ 
select e.nom as nomEmp,e.emploi as emploi,e.noserv as numService,s.service as nomService from emp e,serv s where e.noserv= s.noserv;

/*50 : Sélectionner le nom, l'emploi, suivis de toutes les colonnes de la table SERVICE*/
select e.nom, e.emploi, s.* from emp e, serv s;
select e.nom ,e.embauche, s.nom, s.embauche FROM emp e, emp s where e.embauche < s.embauche AND e.sup = s.noemp ORDER by e.nom ,s.nom ;

/*51 : Sélectionner les nom et date d'embauche des employés suivi des nom et date d'embauche de leur
supérieur pour les employés plus ancien que leur supérieur, dans l'ordre nom employés, noms
supérieurs.*/
select e.nom,s.nom as nomSuperieur,e.embauche,s.embauche as embaucheSuperieur from emp e, emp s where s.noemp = e.sup && e.embauche < s.embauche ORDER BY nom ASC

/*52 : Sélectionner sans doublon les prénoms des directeurs et « les prénoms des techniciens du service 1 » avec un UNION.*/
select prenom from emp where emploi ='DIRECTEUR'
UNION
SELECT DISTINCT prenom FROM emp WHERE emploi = 'DIRECTEUR' union SELECT DISTINCT prenom FROM emp WHERE emploi = 'TECHNICIEN'AND noserv = 1;

/*53 : Sélectionner les numéros de services n’ayant pas d’employés sans une
jointure externe.*/
SELECT serv.noserv from serv 
where noserv not in (
select emp.noserv from emp
);

/*54 : Sélectionner les services ayant au moins un employé.*/
Select DISTINCT service from serv inner join emp on serv.noserv = emp.noserv;

/*55 : Sélectionner les employés qui travaillent à LILLE.*/
select * from emp, serv where ville = "LILLE"

/*56 : Sélectionner les employés qui ont le même chef que DUBOIS, DUBOIS exclu.*/
SELECT * from emp where nom <> 'DUBOIS' AND sup=(
select sup from emp where nom = 'DUBOIS');

/*57 : Sélectionner les employés embauchés le même jour que DUMONT.*/
SELECT * from emp where embauche=(select embauche from emp where nom = 'DUMONT');

/*58 : Sélectionner les nom et date d'embauche des employés plus anciens que MINET, dans l’ordre des embauches.*/
SELECT nom,embauche from emp where 
embauche<(select embauche from emp where nom = 'MINET') order by embauche ASC;

/*59 : : Sélectionner le nom, le prénom, la date d’embauche des employés plus anciens que tous les employés du service
N°6. (Attention MIN)*/
SELECT nom,prenom,embauche from emp where embauche<(select MIN(embauche)from emp where noserv = 6);

/*60 : Sélectionner le nom, le prénom, le revenu mensuel des employés qui gagnent plus qu'au moins un employé du
service N°3, trier le résultat dans l'ordre croissant des revenus mensuels.*/
select nom,prenom,sal+COALESCE(comm,0) as revenu_mensuel from emp where sal+COALESCE(comm,0)>(select MAX(sal+COALESCE(comm,0)) from emp where noserv = 3) ORDER BY sal+COALESCE(comm,0);

/*61:Sélectionner les noms, le numéro de service, l’emplois et le salaires des personnes travaillant dans la même
ville que HAVET.*/
SELECT nom,serv.noserv,emploi,sal from emp, serv  where serv.noserv = emp.noserv and 
ville=(select serv.ville from serv inner join emp on serv.noserv = emp.noserv where emp.nom = 'HAVET');

/*62 : Sélectionner les employés du service 1, ayant le même emploi qu'un employé du service N°3.*/
SELECT * from emp  where (noserv = 1) and emploi in(
select emploi from emp where noserv = 3);

/*63 : Sélectionner les employés du service 1 dont l'emploi n'existe pas dans le service 3.*/
SELECT * from emp  where (noserv = 1) and emploi not in(
select emploi from emp where noserv = 3);

/*64:Sélectionner nom, prénom, emploi, salaire pour les employés ayant même emploi et un salaire supérieur à celui de CARON.*/
SELECT nom,prenom,emploi,sal from emp  where emploi =(select emploi from emp where nom = 'CARON') and 
sal>(select sal from emp where nom = 'CARON');

/*65 :Sélectionner les employés du service N°1 ayant le même emploi qu'un employé du service des VENTES.*/
select * from emp,serv where emp.noserv = 1 AND serv.service IN(
select service from serv where service='VENTES');

/*66:Sélectionner les employés de LILLE ayant le même emploi que RICHARD,
trier le résultat dans l'ordre alphabétique des noms.*/
select * from emp,serv where serv.ville = 'LILLE' and emp.emploi =(
select emploi from emp where nom= 'RICHARD')  ORDER BY emp.nom asc;

/*67 : Sélectionner les employés dont le salaire est plus élevé que le salaire moyen de 
leur service (moyenne des salaires = avg(sal)),résultats triés par numéros de service.*/
select * from emp where sal>(
select avg(sal) from emp where noserv in(select noserv from emp)) ORDER BY emp.noserv asc;

/*68:Sélectionner les employés du service INFORMATIQUE embauchés la même année qu'un employé du service VENTES.*/
select * from emp INNER JOIN serv on emp.noserv = serv.noserv 
where serv.service = 'INFORMATIQUE' AND to_char(emp.embauche,'YYYY')
IN(select to_char(embauche,'YYYY')
from emp INNER JOIN serv on emp.noserv = serv.noserv 
where serv.service = 'VENTES');

/*69 : Sélectionner le nom, l’emploi, la ville pour les employés 
qui ne travaillent pas dans le même service que leur supérieur hiérarchique direct.*/
select employe.nom,employe.emploi, employe.noserv,ville,s.noserv from emp as employe 
INNER JOIN emp as s on employe.sup = s.noemp 
inner join serv on employe.noserv=serv.noserv
and employe.noserv != (select noserv from emp where emp.noemp=employe.sup);

/*70 : Sélectionner le nom, le prénom, le service, le revenu des employés qui ont 
des subalternes, trier le résultat suivant le revenu décroissant.*/
select e.nom,e.prenom,e.sal+COALESCE(e.comm,0),e.emploi,s.service from emp e inner join serv s on e.noserv=s.noserv  
where noemp in(select distinct sup from emp) ORDER BY e.sal+COALESCE(e.comm,0) desc;

/*72 : Sélectionner le nom, le salaire, commission des employés 
dont la commission représente plus que le double du salaire.*/
select nom,sal,comm from emp where sal *2< comm;

/*74 : Sélectionner le nom, l’emploi, le service et le revenu annuel ( à l’euro près) de tous les vendeurs.*/
select nom,emploi,round(coalesce(comm, 0))*12 as "REVENUE annuel" from emp
where emploi='VENDEUR';

/*76 : Idem en remplaçant GAIN_ MENSUEL par GAIN_MENSUEL*/
set :noserv= 'XXX';
select nom,prenom,emploi,sal AS salaire,comm as commission,round(sal+coalesce(comm, 0)) as REVENUE_mensuel from emp;

/*78 : Afficher le nom, l'emploi, les salaires journalier et horaire pour les employés du service
dont le numéro sera saisi au clavier(22 jours/mois et 8 heures/jour), sans arrondi, arrondi au centime près.*/
select nom,emploi,round((sal/22),2) AS salaire_JOURNALIER,round((sal/22)/8,2) AS salaire_horaire from emp;

/*80 : Concaténer les colonnes Service et Ville en les reliant par " ----> ",
les premières lettres des noms de villes doivent se trouver sur une même verticale.*/
SELECT CONCAT(service,'---->', ville) as service FROM serv;

/*82 : Sélectionner les employés en remplaçant les noms par '*****' dans le service n°1,
trier le résultat suivant le N° de service.*/
SELECT noemp,prenom,emploi,noserv,
	 CASE
	 	  WHEN noserv = 1 THEN '******'
		  else nom
		  END
		  as nom FROM emp;

/*84 : Sélectionner les employés embauchés en 1988.*/
SELECT * from emp where to_char(embauche, 'YYYY') = '1988';

/*86 : Sélectionner les positions des premiers M et E dans les noms des employés*/
SELECT position('E'in nom),position('M'in nom) from emp;

/*89:Sélectionner nom, emploi, date d'embauche des employés d’un service dont le numéro sera saisi au clavier.*/
select nom,emploi,embauche from emp ;

/*91:Même chose en écrivant la colonne embauche sous la forme ‘fm day dd month yyyy'*/
select nom,emploi,to_char(embauche,'fm day dd month yyyy') from emp;

/*93 : Même chose en écrivant la colonne embauche sous la forme 'dy mon yy'*/
select nom,emploi,to_char(embauche,'dy mon yy') from emp;

/*95 : Sélectionner les employés avec leur ancienneté en jours dans l'entreprise.*/
SELECT (current_date - embauche) AS anciennete FROM emp;

/*97 : Sélectionner toutes les dates d’embauche majorées de 12 ans*/
SELECT embauche + INTERVAL '12 years' AS embauche_majore FROM emp;

/*99 : Depuis combien de jours êtes-vous nés ?*/
SELECT (current_date - '1989-11-04') AS jour_depuis_naissance ;

/*101 : Afficher la moyenne des revenus (avec commission) des vendeurs.*/
SELECT Avg(sal+coalesce(comm,0)) from emp where emploi = 'VENDEUR';

/*103 : Afficher la somme des salaires et la somme des commissions des vendeurs.*/
SELECT sum(sal)AS somme_salaire_Vendeur,sum(coalesce(comm,0)) as somme_commission_Vendeur 
FROM emp where emploi = 'VENDEUR';

/*105 : Compter les employés embauchés chaque trimestre.*/
SELECT count(*) FROM emp GROUP BY date_part('quarter',embauche);

/*107 : Sélectionner nom, emploi, revenu mensuel de l'employé qui gagne le plus.*/
SELECT nom,emploi, sal +(COALESCE(comm,0))AS "revenu mensuel" FROM emp
WHERE sal +(COALESCE(comm,0)) = (
SELECT max(sal +(COALESCE(comm,0)))
FROM emp );

/*109 : Déterminer le nombre d'emploi différents du service N°1.*/
SELECT count(distinct(emploi)) FROM emp
WHERE noserv = 1;

/*111 : Pour chaque service, afficher son N° et le salaire moyen des employés du service
arrondi l’euro près.*/
SELECT noserv,round(avg(sal),0) FROM emp GROUP BY noserv;

/*113 : Grouper les employés par service et par emploi à l'intérieur de chaque service,
pour chaque groupe afficher l'effectif et le salaire moyen.*/
select noserv,emploi,round(avg(sal),2) from emp group by noserv,emploi order by noserv;

/*115 : Afficher l'emploi, l'effectif, le salaire moyen pour tout type d'emploi ayant plus
de deux représentants.*/
select emploi,count(emploi),round(avg(sal),2) from emp
group by emploi
having COUNT(emploi)>2 ;

/*117 : Sélectionner les services ayant une commission moyenne supérieure au quart du
salaire moyen.*/
select service, round(avg(coalesce(comm,0))) from serv inner join emp on serv.noserv=emp.noserv
GROUP BY service
having round(avg(coalesce(comm,0)))> (round(avg(sal)))/4;

/* 119 : Afficher, sur la même ligne, pour chaque service, le nombre d'employés ne
touchant pas de commission et le nombre d'employés touchant une commission.*/
select s.service,count(e.noemp),
COUNT(CASE WHEN e.comm isnull then 1 end ) as "nombre employe ayant une comm",
COUNT(CASE WHEN e.comm notnull then 1 end) as "nombre employe ayant pas de comm"
from emp e inner join serv s on s.noserv = e.noserv
group by s.service

/*120 : Afficher l'effectif, la moyenne et le total pour les salaires et les commissions par
emploi.*/
select emploi,count(emploi) nombreEmploye,
round(avg(sal)) moyenneSalaire,
round(sum(sal)) sommeSalaire,
round(avg(coalesce(comm,0))) moyenneComm,
round(sum(coalesce(comm,0))) sommeComm
from emp
group by emploi;
